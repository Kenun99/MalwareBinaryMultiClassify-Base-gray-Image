from sklearn.ensemble import RandomForestClassifier as RF
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np
from sklearn.metrics import f1_score, roc_auc_score, recall_score

from sklearn.preprocessing import label_binarize

subtrainLabel = pd.read_csv("./dataset/trainLabels.csv")
subtrainfeature = pd.read_csv("./dataset/imgfeature.csv")
subtrain = pd.merge(subtrainLabel, subtrainfeature, on='Id')
labels = subtrain.Class
subtrain.drop(["Class", "Id"], axis=1, inplace=True)
subtrain = subtrain.values
X_train, X_test, y_train, y_test = train_test_split(subtrain, labels, test_size=0.4)

srf = RF(n_estimators=500, n_jobs=-1)
srf.fit(X_train, y_train)
y_pred = srf.predict(X_test)
print("scroe", srf.score(X_test, y_test))
print("f1 score: ", f1_score(y_test, y_pred, average='macro'))
print("recall_score", recall_score(y_test, y_pred, average='macro'))

y_one_hot = label_binarize(y_test, np.arange(9))
y_score = srf.predict_proba(X_test)
print('aucï¼š', roc_auc_score(y_one_hot, y_score, average='micro'))

# print('multiclass log loss: ', multiclass_log_loss(tmp_test_label, prediction))
